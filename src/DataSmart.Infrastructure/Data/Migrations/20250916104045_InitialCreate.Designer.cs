// <auto-generated />
using System;
using DataSmart.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace DataSmart.Infrastructure.Data.Migrations
{
    [DbContext(typeof(DataSmartDbContext))]
    [Migration("20250916104045_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DataSmart.Core.Models.FinancialReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<int?>("FileSizeKb")
                        .HasColumnType("integer")
                        .HasColumnName("file_size_kb");

                    b.Property<string>("OriginalFilename")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("original_filename");

                    b.Property<string>("OutputPdfUrl")
                        .HasColumnType("text")
                        .HasColumnName("output_pdf_url");

                    b.Property<string>("Period")
                        .HasColumnType("text")
                        .HasColumnName("period");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("report_type");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("financial_reports", "finance");
                });

            modelBuilder.Entity("DataSmart.Core.Models.Plan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("is_active");

                    b.Property<int>("MonthlyCoinAllowance")
                        .HasColumnType("integer")
                        .HasColumnName("monthly_coin_allowance");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("PriceUSD")
                        .HasColumnType("numeric")
                        .HasColumnName("price_usd");

                    b.HasKey("Id");

                    b.ToTable("plans", "public");
                });

            modelBuilder.Entity("DataSmart.Core.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CompanyName")
                        .HasColumnType("text")
                        .HasColumnName("company_name");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<string>("Locale")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("locale");

                    b.HasKey("Id");

                    b.ToTable("users", "public");
                });
#pragma warning restore 612, 618
        }
    }
}
